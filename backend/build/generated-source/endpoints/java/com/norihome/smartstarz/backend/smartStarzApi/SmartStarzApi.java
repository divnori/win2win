/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-11-07 19:12:12 UTC)
 * on 2018-01-02 at 01:26:00 UTC 
 * Modify at your own risk.
 */

package com.norihome.smartstarz.backend.smartStarzApi;

/**
 * Service definition for SmartStarzApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link SmartStarzApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class SmartStarzApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.23.0 of the smartStarzApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "smartStarzApi/v1/";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public SmartStarzApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  SmartStarzApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addStudentToEvent".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link AddStudentToEvent#execute()} method to invoke the remote operation.
   *
   * @param eventName
   * @param studentName
   * @return the request
   */
  public AddStudentToEvent addStudentToEvent(java.lang.String eventName, java.lang.String studentName) throws java.io.IOException {
    AddStudentToEvent result = new AddStudentToEvent(eventName, studentName);
    initialize(result);
    return result;
  }

  public class AddStudentToEvent extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "addStudentToEvent/{eventName}/{studentName}";

    /**
     * Create a request for the method "addStudentToEvent".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link AddStudentToEvent#execute()} method to invoke the remote
     * operation. <p> {@link AddStudentToEvent#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param eventName
     * @param studentName
     * @since 1.13
     */
    protected AddStudentToEvent(java.lang.String eventName, java.lang.String studentName) {
      super(SmartStarzApi.this, "POST", REST_PATH, null, Void.class);
      this.eventName = com.google.api.client.util.Preconditions.checkNotNull(eventName, "Required parameter eventName must be specified.");
      this.studentName = com.google.api.client.util.Preconditions.checkNotNull(studentName, "Required parameter studentName must be specified.");
    }

    @Override
    public AddStudentToEvent setAlt(java.lang.String alt) {
      return (AddStudentToEvent) super.setAlt(alt);
    }

    @Override
    public AddStudentToEvent setFields(java.lang.String fields) {
      return (AddStudentToEvent) super.setFields(fields);
    }

    @Override
    public AddStudentToEvent setKey(java.lang.String key) {
      return (AddStudentToEvent) super.setKey(key);
    }

    @Override
    public AddStudentToEvent setOauthToken(java.lang.String oauthToken) {
      return (AddStudentToEvent) super.setOauthToken(oauthToken);
    }

    @Override
    public AddStudentToEvent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddStudentToEvent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddStudentToEvent setQuotaUser(java.lang.String quotaUser) {
      return (AddStudentToEvent) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddStudentToEvent setUserIp(java.lang.String userIp) {
      return (AddStudentToEvent) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String eventName;

    /**

     */
    public java.lang.String getEventName() {
      return eventName;
    }

    public AddStudentToEvent setEventName(java.lang.String eventName) {
      this.eventName = eventName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String studentName;

    /**

     */
    public java.lang.String getStudentName() {
      return studentName;
    }

    public AddStudentToEvent setStudentName(java.lang.String studentName) {
      this.studentName = studentName;
      return this;
    }

    @Override
    public AddStudentToEvent set(String parameterName, Object value) {
      return (AddStudentToEvent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addStudentToGroup".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link AddStudentToGroup#execute()} method to invoke the remote operation.
   *
   * @param studentName
   * @param content the {@link com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBean}
   * @return the request
   */
  public AddStudentToGroup addStudentToGroup(java.lang.String studentName, com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBean content) throws java.io.IOException {
    AddStudentToGroup result = new AddStudentToGroup(studentName, content);
    initialize(result);
    return result;
  }

  public class AddStudentToGroup extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "addStudentToGroup/{studentName}";

    /**
     * Create a request for the method "addStudentToGroup".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link AddStudentToGroup#execute()} method to invoke the remote
     * operation. <p> {@link AddStudentToGroup#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param studentName
     * @param content the {@link com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBean}
     * @since 1.13
     */
    protected AddStudentToGroup(java.lang.String studentName, com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBean content) {
      super(SmartStarzApi.this, "POST", REST_PATH, content, Void.class);
      this.studentName = com.google.api.client.util.Preconditions.checkNotNull(studentName, "Required parameter studentName must be specified.");
    }

    @Override
    public AddStudentToGroup setAlt(java.lang.String alt) {
      return (AddStudentToGroup) super.setAlt(alt);
    }

    @Override
    public AddStudentToGroup setFields(java.lang.String fields) {
      return (AddStudentToGroup) super.setFields(fields);
    }

    @Override
    public AddStudentToGroup setKey(java.lang.String key) {
      return (AddStudentToGroup) super.setKey(key);
    }

    @Override
    public AddStudentToGroup setOauthToken(java.lang.String oauthToken) {
      return (AddStudentToGroup) super.setOauthToken(oauthToken);
    }

    @Override
    public AddStudentToGroup setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddStudentToGroup) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddStudentToGroup setQuotaUser(java.lang.String quotaUser) {
      return (AddStudentToGroup) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddStudentToGroup setUserIp(java.lang.String userIp) {
      return (AddStudentToGroup) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String studentName;

    /**

     */
    public java.lang.String getStudentName() {
      return studentName;
    }

    public AddStudentToGroup setStudentName(java.lang.String studentName) {
      this.studentName = studentName;
      return this;
    }

    @Override
    public AddStudentToGroup set(String parameterName, Object value) {
      return (AddStudentToGroup) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "clearEvents".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link ClearEvents#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ClearEvents clearEvents() throws java.io.IOException {
    ClearEvents result = new ClearEvents();
    initialize(result);
    return result;
  }

  public class ClearEvents extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "clearEvents";

    /**
     * Create a request for the method "clearEvents".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link ClearEvents#execute()} method to invoke the remote
     * operation. <p> {@link
     * ClearEvents#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ClearEvents() {
      super(SmartStarzApi.this, "POST", REST_PATH, null, Void.class);
    }

    @Override
    public ClearEvents setAlt(java.lang.String alt) {
      return (ClearEvents) super.setAlt(alt);
    }

    @Override
    public ClearEvents setFields(java.lang.String fields) {
      return (ClearEvents) super.setFields(fields);
    }

    @Override
    public ClearEvents setKey(java.lang.String key) {
      return (ClearEvents) super.setKey(key);
    }

    @Override
    public ClearEvents setOauthToken(java.lang.String oauthToken) {
      return (ClearEvents) super.setOauthToken(oauthToken);
    }

    @Override
    public ClearEvents setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ClearEvents) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ClearEvents setQuotaUser(java.lang.String quotaUser) {
      return (ClearEvents) super.setQuotaUser(quotaUser);
    }

    @Override
    public ClearEvents setUserIp(java.lang.String userIp) {
      return (ClearEvents) super.setUserIp(userIp);
    }

    @Override
    public ClearEvents set(String parameterName, Object value) {
      return (ClearEvents) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "clearGroups".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link ClearGroups#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ClearGroups clearGroups() throws java.io.IOException {
    ClearGroups result = new ClearGroups();
    initialize(result);
    return result;
  }

  public class ClearGroups extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "clearGroups";

    /**
     * Create a request for the method "clearGroups".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link ClearGroups#execute()} method to invoke the remote
     * operation. <p> {@link
     * ClearGroups#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ClearGroups() {
      super(SmartStarzApi.this, "POST", REST_PATH, null, Void.class);
    }

    @Override
    public ClearGroups setAlt(java.lang.String alt) {
      return (ClearGroups) super.setAlt(alt);
    }

    @Override
    public ClearGroups setFields(java.lang.String fields) {
      return (ClearGroups) super.setFields(fields);
    }

    @Override
    public ClearGroups setKey(java.lang.String key) {
      return (ClearGroups) super.setKey(key);
    }

    @Override
    public ClearGroups setOauthToken(java.lang.String oauthToken) {
      return (ClearGroups) super.setOauthToken(oauthToken);
    }

    @Override
    public ClearGroups setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ClearGroups) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ClearGroups setQuotaUser(java.lang.String quotaUser) {
      return (ClearGroups) super.setQuotaUser(quotaUser);
    }

    @Override
    public ClearGroups setUserIp(java.lang.String userIp) {
      return (ClearGroups) super.setUserIp(userIp);
    }

    @Override
    public ClearGroups set(String parameterName, Object value) {
      return (ClearGroups) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "clearStudents".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link ClearStudents#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ClearStudents clearStudents() throws java.io.IOException {
    ClearStudents result = new ClearStudents();
    initialize(result);
    return result;
  }

  public class ClearStudents extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "clearStudents";

    /**
     * Create a request for the method "clearStudents".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link ClearStudents#execute()} method to invoke the remote
     * operation. <p> {@link ClearStudents#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected ClearStudents() {
      super(SmartStarzApi.this, "POST", REST_PATH, null, Void.class);
    }

    @Override
    public ClearStudents setAlt(java.lang.String alt) {
      return (ClearStudents) super.setAlt(alt);
    }

    @Override
    public ClearStudents setFields(java.lang.String fields) {
      return (ClearStudents) super.setFields(fields);
    }

    @Override
    public ClearStudents setKey(java.lang.String key) {
      return (ClearStudents) super.setKey(key);
    }

    @Override
    public ClearStudents setOauthToken(java.lang.String oauthToken) {
      return (ClearStudents) super.setOauthToken(oauthToken);
    }

    @Override
    public ClearStudents setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ClearStudents) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ClearStudents setQuotaUser(java.lang.String quotaUser) {
      return (ClearStudents) super.setQuotaUser(quotaUser);
    }

    @Override
    public ClearStudents setUserIp(java.lang.String userIp) {
      return (ClearStudents) super.setUserIp(userIp);
    }

    @Override
    public ClearStudents set(String parameterName, Object value) {
      return (ClearStudents) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteEvent".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link DeleteEvent#execute()} method to invoke the remote operation.
   *
   * @param eventName
   * @return the request
   */
  public DeleteEvent deleteEvent(java.lang.String eventName) throws java.io.IOException {
    DeleteEvent result = new DeleteEvent(eventName);
    initialize(result);
    return result;
  }

  public class DeleteEvent extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "event/{eventName}";

    /**
     * Create a request for the method "deleteEvent".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link DeleteEvent#execute()} method to invoke the remote
     * operation. <p> {@link
     * DeleteEvent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param eventName
     * @since 1.13
     */
    protected DeleteEvent(java.lang.String eventName) {
      super(SmartStarzApi.this, "DELETE", REST_PATH, null, Void.class);
      this.eventName = com.google.api.client.util.Preconditions.checkNotNull(eventName, "Required parameter eventName must be specified.");
    }

    @Override
    public DeleteEvent setAlt(java.lang.String alt) {
      return (DeleteEvent) super.setAlt(alt);
    }

    @Override
    public DeleteEvent setFields(java.lang.String fields) {
      return (DeleteEvent) super.setFields(fields);
    }

    @Override
    public DeleteEvent setKey(java.lang.String key) {
      return (DeleteEvent) super.setKey(key);
    }

    @Override
    public DeleteEvent setOauthToken(java.lang.String oauthToken) {
      return (DeleteEvent) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteEvent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteEvent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteEvent setQuotaUser(java.lang.String quotaUser) {
      return (DeleteEvent) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteEvent setUserIp(java.lang.String userIp) {
      return (DeleteEvent) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String eventName;

    /**

     */
    public java.lang.String getEventName() {
      return eventName;
    }

    public DeleteEvent setEventName(java.lang.String eventName) {
      this.eventName = eventName;
      return this;
    }

    @Override
    public DeleteEvent set(String parameterName, Object value) {
      return (DeleteEvent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteGroup".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link DeleteGroup#execute()} method to invoke the remote operation.
   *
   * @param groupName
   * @return the request
   */
  public DeleteGroup deleteGroup(java.lang.String groupName) throws java.io.IOException {
    DeleteGroup result = new DeleteGroup(groupName);
    initialize(result);
    return result;
  }

  public class DeleteGroup extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "group/{groupName}";

    /**
     * Create a request for the method "deleteGroup".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link DeleteGroup#execute()} method to invoke the remote
     * operation. <p> {@link
     * DeleteGroup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param groupName
     * @since 1.13
     */
    protected DeleteGroup(java.lang.String groupName) {
      super(SmartStarzApi.this, "DELETE", REST_PATH, null, Void.class);
      this.groupName = com.google.api.client.util.Preconditions.checkNotNull(groupName, "Required parameter groupName must be specified.");
    }

    @Override
    public DeleteGroup setAlt(java.lang.String alt) {
      return (DeleteGroup) super.setAlt(alt);
    }

    @Override
    public DeleteGroup setFields(java.lang.String fields) {
      return (DeleteGroup) super.setFields(fields);
    }

    @Override
    public DeleteGroup setKey(java.lang.String key) {
      return (DeleteGroup) super.setKey(key);
    }

    @Override
    public DeleteGroup setOauthToken(java.lang.String oauthToken) {
      return (DeleteGroup) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteGroup setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteGroup) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteGroup setQuotaUser(java.lang.String quotaUser) {
      return (DeleteGroup) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteGroup setUserIp(java.lang.String userIp) {
      return (DeleteGroup) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String groupName;

    /**

     */
    public java.lang.String getGroupName() {
      return groupName;
    }

    public DeleteGroup setGroupName(java.lang.String groupName) {
      this.groupName = groupName;
      return this;
    }

    @Override
    public DeleteGroup set(String parameterName, Object value) {
      return (DeleteGroup) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getEvents".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link GetEvents#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetEvents getEvents() throws java.io.IOException {
    GetEvents result = new GetEvents();
    initialize(result);
    return result;
  }

  public class GetEvents extends SmartStarzApiRequest<com.norihome.smartstarz.backend.smartStarzApi.model.EventBeanCollection> {

    private static final String REST_PATH = "eventbeancollection";

    /**
     * Create a request for the method "getEvents".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link GetEvents#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetEvents#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetEvents() {
      super(SmartStarzApi.this, "GET", REST_PATH, null, com.norihome.smartstarz.backend.smartStarzApi.model.EventBeanCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetEvents setAlt(java.lang.String alt) {
      return (GetEvents) super.setAlt(alt);
    }

    @Override
    public GetEvents setFields(java.lang.String fields) {
      return (GetEvents) super.setFields(fields);
    }

    @Override
    public GetEvents setKey(java.lang.String key) {
      return (GetEvents) super.setKey(key);
    }

    @Override
    public GetEvents setOauthToken(java.lang.String oauthToken) {
      return (GetEvents) super.setOauthToken(oauthToken);
    }

    @Override
    public GetEvents setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetEvents) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetEvents setQuotaUser(java.lang.String quotaUser) {
      return (GetEvents) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetEvents setUserIp(java.lang.String userIp) {
      return (GetEvents) super.setUserIp(userIp);
    }

    @Override
    public GetEvents set(String parameterName, Object value) {
      return (GetEvents) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getEventsByName".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link GetEventsByName#execute()} method to invoke the remote operation.
   *
   * @param eventName
   * @return the request
   */
  public GetEventsByName getEventsByName(java.lang.String eventName) throws java.io.IOException {
    GetEventsByName result = new GetEventsByName(eventName);
    initialize(result);
    return result;
  }

  public class GetEventsByName extends SmartStarzApiRequest<com.norihome.smartstarz.backend.smartStarzApi.model.EventBeanCollection> {

    private static final String REST_PATH = "eventbeancollection/{eventName}";

    /**
     * Create a request for the method "getEventsByName".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link GetEventsByName#execute()} method to invoke the remote
     * operation. <p> {@link GetEventsByName#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param eventName
     * @since 1.13
     */
    protected GetEventsByName(java.lang.String eventName) {
      super(SmartStarzApi.this, "GET", REST_PATH, null, com.norihome.smartstarz.backend.smartStarzApi.model.EventBeanCollection.class);
      this.eventName = com.google.api.client.util.Preconditions.checkNotNull(eventName, "Required parameter eventName must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetEventsByName setAlt(java.lang.String alt) {
      return (GetEventsByName) super.setAlt(alt);
    }

    @Override
    public GetEventsByName setFields(java.lang.String fields) {
      return (GetEventsByName) super.setFields(fields);
    }

    @Override
    public GetEventsByName setKey(java.lang.String key) {
      return (GetEventsByName) super.setKey(key);
    }

    @Override
    public GetEventsByName setOauthToken(java.lang.String oauthToken) {
      return (GetEventsByName) super.setOauthToken(oauthToken);
    }

    @Override
    public GetEventsByName setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetEventsByName) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetEventsByName setQuotaUser(java.lang.String quotaUser) {
      return (GetEventsByName) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetEventsByName setUserIp(java.lang.String userIp) {
      return (GetEventsByName) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String eventName;

    /**

     */
    public java.lang.String getEventName() {
      return eventName;
    }

    public GetEventsByName setEventName(java.lang.String eventName) {
      this.eventName = eventName;
      return this;
    }

    @Override
    public GetEventsByName set(String parameterName, Object value) {
      return (GetEventsByName) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getGroups".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link GetGroups#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetGroups getGroups() throws java.io.IOException {
    GetGroups result = new GetGroups();
    initialize(result);
    return result;
  }

  public class GetGroups extends SmartStarzApiRequest<com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBeanCollection> {

    private static final String REST_PATH = "groupsbeancollection";

    /**
     * Create a request for the method "getGroups".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link GetGroups#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetGroups#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetGroups() {
      super(SmartStarzApi.this, "GET", REST_PATH, null, com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBeanCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetGroups setAlt(java.lang.String alt) {
      return (GetGroups) super.setAlt(alt);
    }

    @Override
    public GetGroups setFields(java.lang.String fields) {
      return (GetGroups) super.setFields(fields);
    }

    @Override
    public GetGroups setKey(java.lang.String key) {
      return (GetGroups) super.setKey(key);
    }

    @Override
    public GetGroups setOauthToken(java.lang.String oauthToken) {
      return (GetGroups) super.setOauthToken(oauthToken);
    }

    @Override
    public GetGroups setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetGroups) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetGroups setQuotaUser(java.lang.String quotaUser) {
      return (GetGroups) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetGroups setUserIp(java.lang.String userIp) {
      return (GetGroups) super.setUserIp(userIp);
    }

    @Override
    public GetGroups set(String parameterName, Object value) {
      return (GetGroups) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getStudentByName".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link GetStudentByName#execute()} method to invoke the remote operation.
   *
   * @param studentName
   * @return the request
   */
  public GetStudentByName getStudentByName(java.lang.String studentName) throws java.io.IOException {
    GetStudentByName result = new GetStudentByName(studentName);
    initialize(result);
    return result;
  }

  public class GetStudentByName extends SmartStarzApiRequest<com.norihome.smartstarz.backend.smartStarzApi.model.StudentBean> {

    private static final String REST_PATH = "studentbean/{studentName}";

    /**
     * Create a request for the method "getStudentByName".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link GetStudentByName#execute()} method to invoke the remote
     * operation. <p> {@link GetStudentByName#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param studentName
     * @since 1.13
     */
    protected GetStudentByName(java.lang.String studentName) {
      super(SmartStarzApi.this, "GET", REST_PATH, null, com.norihome.smartstarz.backend.smartStarzApi.model.StudentBean.class);
      this.studentName = com.google.api.client.util.Preconditions.checkNotNull(studentName, "Required parameter studentName must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetStudentByName setAlt(java.lang.String alt) {
      return (GetStudentByName) super.setAlt(alt);
    }

    @Override
    public GetStudentByName setFields(java.lang.String fields) {
      return (GetStudentByName) super.setFields(fields);
    }

    @Override
    public GetStudentByName setKey(java.lang.String key) {
      return (GetStudentByName) super.setKey(key);
    }

    @Override
    public GetStudentByName setOauthToken(java.lang.String oauthToken) {
      return (GetStudentByName) super.setOauthToken(oauthToken);
    }

    @Override
    public GetStudentByName setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetStudentByName) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetStudentByName setQuotaUser(java.lang.String quotaUser) {
      return (GetStudentByName) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetStudentByName setUserIp(java.lang.String userIp) {
      return (GetStudentByName) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String studentName;

    /**

     */
    public java.lang.String getStudentName() {
      return studentName;
    }

    public GetStudentByName setStudentName(java.lang.String studentName) {
      this.studentName = studentName;
      return this;
    }

    @Override
    public GetStudentByName set(String parameterName, Object value) {
      return (GetStudentByName) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getStudents".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link GetStudents#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetStudents getStudents() throws java.io.IOException {
    GetStudents result = new GetStudents();
    initialize(result);
    return result;
  }

  public class GetStudents extends SmartStarzApiRequest<com.norihome.smartstarz.backend.smartStarzApi.model.StudentBeanCollection> {

    private static final String REST_PATH = "studentbeancollection";

    /**
     * Create a request for the method "getStudents".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link GetStudents#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetStudents#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetStudents() {
      super(SmartStarzApi.this, "GET", REST_PATH, null, com.norihome.smartstarz.backend.smartStarzApi.model.StudentBeanCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetStudents setAlt(java.lang.String alt) {
      return (GetStudents) super.setAlt(alt);
    }

    @Override
    public GetStudents setFields(java.lang.String fields) {
      return (GetStudents) super.setFields(fields);
    }

    @Override
    public GetStudents setKey(java.lang.String key) {
      return (GetStudents) super.setKey(key);
    }

    @Override
    public GetStudents setOauthToken(java.lang.String oauthToken) {
      return (GetStudents) super.setOauthToken(oauthToken);
    }

    @Override
    public GetStudents setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetStudents) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetStudents setQuotaUser(java.lang.String quotaUser) {
      return (GetStudents) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetStudents setUserIp(java.lang.String userIp) {
      return (GetStudents) super.setUserIp(userIp);
    }

    @Override
    public GetStudents set(String parameterName, Object value) {
      return (GetStudents) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeStudentFromEvent".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link RemoveStudentFromEvent#execute()} method to invoke the remote
   * operation.
   *
   * @param eventName
   * @param studentName
   * @param updateStudent
   * @return the request
   */
  public RemoveStudentFromEvent removeStudentFromEvent(java.lang.String eventName, java.lang.String studentName, java.lang.String updateStudent) throws java.io.IOException {
    RemoveStudentFromEvent result = new RemoveStudentFromEvent(eventName, studentName, updateStudent);
    initialize(result);
    return result;
  }

  public class RemoveStudentFromEvent extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "studentfromevent/{eventName}/{studentName}/{updateStudent}";

    /**
     * Create a request for the method "removeStudentFromEvent".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link RemoveStudentFromEvent#execute()} method to invoke the
     * remote operation. <p> {@link RemoveStudentFromEvent#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param eventName
     * @param studentName
     * @param updateStudent
     * @since 1.13
     */
    protected RemoveStudentFromEvent(java.lang.String eventName, java.lang.String studentName, java.lang.String updateStudent) {
      super(SmartStarzApi.this, "DELETE", REST_PATH, null, Void.class);
      this.eventName = com.google.api.client.util.Preconditions.checkNotNull(eventName, "Required parameter eventName must be specified.");
      this.studentName = com.google.api.client.util.Preconditions.checkNotNull(studentName, "Required parameter studentName must be specified.");
      this.updateStudent = com.google.api.client.util.Preconditions.checkNotNull(updateStudent, "Required parameter updateStudent must be specified.");
    }

    @Override
    public RemoveStudentFromEvent setAlt(java.lang.String alt) {
      return (RemoveStudentFromEvent) super.setAlt(alt);
    }

    @Override
    public RemoveStudentFromEvent setFields(java.lang.String fields) {
      return (RemoveStudentFromEvent) super.setFields(fields);
    }

    @Override
    public RemoveStudentFromEvent setKey(java.lang.String key) {
      return (RemoveStudentFromEvent) super.setKey(key);
    }

    @Override
    public RemoveStudentFromEvent setOauthToken(java.lang.String oauthToken) {
      return (RemoveStudentFromEvent) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveStudentFromEvent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveStudentFromEvent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveStudentFromEvent setQuotaUser(java.lang.String quotaUser) {
      return (RemoveStudentFromEvent) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveStudentFromEvent setUserIp(java.lang.String userIp) {
      return (RemoveStudentFromEvent) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String eventName;

    /**

     */
    public java.lang.String getEventName() {
      return eventName;
    }

    public RemoveStudentFromEvent setEventName(java.lang.String eventName) {
      this.eventName = eventName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String studentName;

    /**

     */
    public java.lang.String getStudentName() {
      return studentName;
    }

    public RemoveStudentFromEvent setStudentName(java.lang.String studentName) {
      this.studentName = studentName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String updateStudent;

    /**

     */
    public java.lang.String getUpdateStudent() {
      return updateStudent;
    }

    public RemoveStudentFromEvent setUpdateStudent(java.lang.String updateStudent) {
      this.updateStudent = updateStudent;
      return this;
    }

    @Override
    public RemoveStudentFromEvent set(String parameterName, Object value) {
      return (RemoveStudentFromEvent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "storeEvent".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link StoreEvent#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.norihome.smartstarz.backend.smartStarzApi.model.EventBean}
   * @return the request
   */
  public StoreEvent storeEvent(com.norihome.smartstarz.backend.smartStarzApi.model.EventBean content) throws java.io.IOException {
    StoreEvent result = new StoreEvent(content);
    initialize(result);
    return result;
  }

  public class StoreEvent extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "storeEvent";

    /**
     * Create a request for the method "storeEvent".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link StoreEvent#execute()} method to invoke the remote
     * operation. <p> {@link
     * StoreEvent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.norihome.smartstarz.backend.smartStarzApi.model.EventBean}
     * @since 1.13
     */
    protected StoreEvent(com.norihome.smartstarz.backend.smartStarzApi.model.EventBean content) {
      super(SmartStarzApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public StoreEvent setAlt(java.lang.String alt) {
      return (StoreEvent) super.setAlt(alt);
    }

    @Override
    public StoreEvent setFields(java.lang.String fields) {
      return (StoreEvent) super.setFields(fields);
    }

    @Override
    public StoreEvent setKey(java.lang.String key) {
      return (StoreEvent) super.setKey(key);
    }

    @Override
    public StoreEvent setOauthToken(java.lang.String oauthToken) {
      return (StoreEvent) super.setOauthToken(oauthToken);
    }

    @Override
    public StoreEvent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (StoreEvent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public StoreEvent setQuotaUser(java.lang.String quotaUser) {
      return (StoreEvent) super.setQuotaUser(quotaUser);
    }

    @Override
    public StoreEvent setUserIp(java.lang.String userIp) {
      return (StoreEvent) super.setUserIp(userIp);
    }

    @Override
    public StoreEvent set(String parameterName, Object value) {
      return (StoreEvent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "storeGroup".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link StoreGroup#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBean}
   * @return the request
   */
  public StoreGroup storeGroup(com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBean content) throws java.io.IOException {
    StoreGroup result = new StoreGroup(content);
    initialize(result);
    return result;
  }

  public class StoreGroup extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "storeGroup";

    /**
     * Create a request for the method "storeGroup".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link StoreGroup#execute()} method to invoke the remote
     * operation. <p> {@link
     * StoreGroup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBean}
     * @since 1.13
     */
    protected StoreGroup(com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBean content) {
      super(SmartStarzApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public StoreGroup setAlt(java.lang.String alt) {
      return (StoreGroup) super.setAlt(alt);
    }

    @Override
    public StoreGroup setFields(java.lang.String fields) {
      return (StoreGroup) super.setFields(fields);
    }

    @Override
    public StoreGroup setKey(java.lang.String key) {
      return (StoreGroup) super.setKey(key);
    }

    @Override
    public StoreGroup setOauthToken(java.lang.String oauthToken) {
      return (StoreGroup) super.setOauthToken(oauthToken);
    }

    @Override
    public StoreGroup setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (StoreGroup) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public StoreGroup setQuotaUser(java.lang.String quotaUser) {
      return (StoreGroup) super.setQuotaUser(quotaUser);
    }

    @Override
    public StoreGroup setUserIp(java.lang.String userIp) {
      return (StoreGroup) super.setUserIp(userIp);
    }

    @Override
    public StoreGroup set(String parameterName, Object value) {
      return (StoreGroup) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "storeStudent".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link StoreStudent#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.norihome.smartstarz.backend.smartStarzApi.model.StudentBean}
   * @return the request
   */
  public StoreStudent storeStudent(com.norihome.smartstarz.backend.smartStarzApi.model.StudentBean content) throws java.io.IOException {
    StoreStudent result = new StoreStudent(content);
    initialize(result);
    return result;
  }

  public class StoreStudent extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "storeStudent";

    /**
     * Create a request for the method "storeStudent".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link StoreStudent#execute()} method to invoke the remote
     * operation. <p> {@link
     * StoreStudent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.norihome.smartstarz.backend.smartStarzApi.model.StudentBean}
     * @since 1.13
     */
    protected StoreStudent(com.norihome.smartstarz.backend.smartStarzApi.model.StudentBean content) {
      super(SmartStarzApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public StoreStudent setAlt(java.lang.String alt) {
      return (StoreStudent) super.setAlt(alt);
    }

    @Override
    public StoreStudent setFields(java.lang.String fields) {
      return (StoreStudent) super.setFields(fields);
    }

    @Override
    public StoreStudent setKey(java.lang.String key) {
      return (StoreStudent) super.setKey(key);
    }

    @Override
    public StoreStudent setOauthToken(java.lang.String oauthToken) {
      return (StoreStudent) super.setOauthToken(oauthToken);
    }

    @Override
    public StoreStudent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (StoreStudent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public StoreStudent setQuotaUser(java.lang.String quotaUser) {
      return (StoreStudent) super.setQuotaUser(quotaUser);
    }

    @Override
    public StoreStudent setUserIp(java.lang.String userIp) {
      return (StoreStudent) super.setUserIp(userIp);
    }

    @Override
    public StoreStudent set(String parameterName, Object value) {
      return (StoreStudent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateEvent".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link UpdateEvent#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.norihome.smartstarz.backend.smartStarzApi.model.EventBean}
   * @return the request
   */
  public UpdateEvent updateEvent(com.norihome.smartstarz.backend.smartStarzApi.model.EventBean content) throws java.io.IOException {
    UpdateEvent result = new UpdateEvent(content);
    initialize(result);
    return result;
  }

  public class UpdateEvent extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "void";

    /**
     * Create a request for the method "updateEvent".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link UpdateEvent#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateEvent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.norihome.smartstarz.backend.smartStarzApi.model.EventBean}
     * @since 1.13
     */
    protected UpdateEvent(com.norihome.smartstarz.backend.smartStarzApi.model.EventBean content) {
      super(SmartStarzApi.this, "PUT", REST_PATH, content, Void.class);
    }

    @Override
    public UpdateEvent setAlt(java.lang.String alt) {
      return (UpdateEvent) super.setAlt(alt);
    }

    @Override
    public UpdateEvent setFields(java.lang.String fields) {
      return (UpdateEvent) super.setFields(fields);
    }

    @Override
    public UpdateEvent setKey(java.lang.String key) {
      return (UpdateEvent) super.setKey(key);
    }

    @Override
    public UpdateEvent setOauthToken(java.lang.String oauthToken) {
      return (UpdateEvent) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateEvent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateEvent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateEvent setQuotaUser(java.lang.String quotaUser) {
      return (UpdateEvent) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateEvent setUserIp(java.lang.String userIp) {
      return (UpdateEvent) super.setUserIp(userIp);
    }

    @Override
    public UpdateEvent set(String parameterName, Object value) {
      return (UpdateEvent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateGroup".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link UpdateGroup#execute()} method to invoke the remote operation.
   *
   * @param newGroupName
   * @param content the {@link com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBean}
   * @return the request
   */
  public UpdateGroup updateGroup(java.lang.String newGroupName, com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBean content) throws java.io.IOException {
    UpdateGroup result = new UpdateGroup(newGroupName, content);
    initialize(result);
    return result;
  }

  public class UpdateGroup extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "void/{newGroupName}";

    /**
     * Create a request for the method "updateGroup".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link UpdateGroup#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateGroup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param newGroupName
     * @param content the {@link com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBean}
     * @since 1.13
     */
    protected UpdateGroup(java.lang.String newGroupName, com.norihome.smartstarz.backend.smartStarzApi.model.GroupsBean content) {
      super(SmartStarzApi.this, "PUT", REST_PATH, content, Void.class);
      this.newGroupName = com.google.api.client.util.Preconditions.checkNotNull(newGroupName, "Required parameter newGroupName must be specified.");
    }

    @Override
    public UpdateGroup setAlt(java.lang.String alt) {
      return (UpdateGroup) super.setAlt(alt);
    }

    @Override
    public UpdateGroup setFields(java.lang.String fields) {
      return (UpdateGroup) super.setFields(fields);
    }

    @Override
    public UpdateGroup setKey(java.lang.String key) {
      return (UpdateGroup) super.setKey(key);
    }

    @Override
    public UpdateGroup setOauthToken(java.lang.String oauthToken) {
      return (UpdateGroup) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateGroup setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateGroup) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateGroup setQuotaUser(java.lang.String quotaUser) {
      return (UpdateGroup) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateGroup setUserIp(java.lang.String userIp) {
      return (UpdateGroup) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String newGroupName;

    /**

     */
    public java.lang.String getNewGroupName() {
      return newGroupName;
    }

    public UpdateGroup setNewGroupName(java.lang.String newGroupName) {
      this.newGroupName = newGroupName;
      return this;
    }

    @Override
    public UpdateGroup set(String parameterName, Object value) {
      return (UpdateGroup) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateStudent".
   *
   * This request holds the parameters needed by the smartStarzApi server.  After setting any optional
   * parameters, call the {@link UpdateStudent#execute()} method to invoke the remote operation.
   *
   * @param studentName
   * @param eventName
   * @return the request
   */
  public UpdateStudent updateStudent(java.lang.String studentName, java.lang.String eventName) throws java.io.IOException {
    UpdateStudent result = new UpdateStudent(studentName, eventName);
    initialize(result);
    return result;
  }

  public class UpdateStudent extends SmartStarzApiRequest<Void> {

    private static final String REST_PATH = "void/{studentName}/{eventName}";

    /**
     * Create a request for the method "updateStudent".
     *
     * This request holds the parameters needed by the the smartStarzApi server.  After setting any
     * optional parameters, call the {@link UpdateStudent#execute()} method to invoke the remote
     * operation. <p> {@link UpdateStudent#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param studentName
     * @param eventName
     * @since 1.13
     */
    protected UpdateStudent(java.lang.String studentName, java.lang.String eventName) {
      super(SmartStarzApi.this, "PUT", REST_PATH, null, Void.class);
      this.studentName = com.google.api.client.util.Preconditions.checkNotNull(studentName, "Required parameter studentName must be specified.");
      this.eventName = com.google.api.client.util.Preconditions.checkNotNull(eventName, "Required parameter eventName must be specified.");
    }

    @Override
    public UpdateStudent setAlt(java.lang.String alt) {
      return (UpdateStudent) super.setAlt(alt);
    }

    @Override
    public UpdateStudent setFields(java.lang.String fields) {
      return (UpdateStudent) super.setFields(fields);
    }

    @Override
    public UpdateStudent setKey(java.lang.String key) {
      return (UpdateStudent) super.setKey(key);
    }

    @Override
    public UpdateStudent setOauthToken(java.lang.String oauthToken) {
      return (UpdateStudent) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateStudent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateStudent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateStudent setQuotaUser(java.lang.String quotaUser) {
      return (UpdateStudent) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateStudent setUserIp(java.lang.String userIp) {
      return (UpdateStudent) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String studentName;

    /**

     */
    public java.lang.String getStudentName() {
      return studentName;
    }

    public UpdateStudent setStudentName(java.lang.String studentName) {
      this.studentName = studentName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String eventName;

    /**

     */
    public java.lang.String getEventName() {
      return eventName;
    }

    public UpdateStudent setEventName(java.lang.String eventName) {
      this.eventName = eventName;
      return this;
    }

    @Override
    public UpdateStudent set(String parameterName, Object value) {
      return (UpdateStudent) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link SmartStarzApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link SmartStarzApi}. */
    @Override
    public SmartStarzApi build() {
      return new SmartStarzApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link SmartStarzApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setSmartStarzApiRequestInitializer(
        SmartStarzApiRequestInitializer smartstarzapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(smartstarzapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
